{"version":3,"file":"commonHelpers2.js","sources":["../src/js/02-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nconst DEFAULT_TIME = '00';\n\nconst startBtn = document.querySelector('[data-start]');\n\nstartBtn.disabled = true;\n\nconst days = document.querySelector('[data-days]');\nconst hours = document.querySelector('[data-hours]');\nconst minutes = document.querySelector('[data-minutes]');\nconst seconds = document.querySelector('[data-seconds]');\n\nconst onClose = (selectedDates) => {\n  resetTimer();\n\n  const selectedTime = selectedDates[0].getTime();\n  const currentTime = new Date().getTime();\n\n  if (currentTime > selectedTime) {\n    iziToast.error({\n      message: \"Please choose a date in the future\",\n      position: \"topRight\",\n    });\n\n    return;\n  }\n\n  startBtn.disabled = false;\n  finishedTimerAt = selectedTime;\n}\n\nflatpickr(\"#datetime-picker\", {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose,\n});\n\nlet finishedTimerAt = 0;\nlet timerId = null;\n\nconst startTimer = () => {\n  timerId = setInterval(() => {\n    const currentTime = new Date().getTime();\n\n    const timeDiff = finishedTimerAt - currentTime;\n\n    if (0 > timeDiff) {\n      resetTimer();\n\n      return;\n    }\n\n    const {\n      days: daysValue,\n      hours: hoursValue,\n      minutes: minutesValue,\n      seconds: secondsValue,\n    } = convertMs(timeDiff);\n\n    days.textContent = addLeadingZero(daysValue);\n    hours.textContent = addLeadingZero(hoursValue);\n    minutes.textContent = addLeadingZero(minutesValue);\n    seconds.textContent = addLeadingZero(secondsValue);\n  }, 1000);\n}\n\nconst convertMs = (ms) => {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nconst addLeadingZero = (value) => {\n  return value.toString().padStart(2, \"0\");\n}\n\nconst resetTimer = () => {\n  clearInterval(timerId);\n\n  startBtn.disabled = true;\n\n  days.textContent = DEFAULT_TIME;\n  hours.textContent = DEFAULT_TIME;\n  minutes.textContent = DEFAULT_TIME;\n  seconds.textContent = DEFAULT_TIME;\n}\n\nstartBtn.addEventListener('click', startTimer);\n"],"names":["DEFAULT_TIME","startBtn","days","hours","minutes","seconds","onClose","selectedDates","resetTimer","selectedTime","iziToast","finishedTimerAt","flatpickr","timerId","startTimer","currentTime","timeDiff","daysValue","hoursValue","minutesValue","secondsValue","convertMs","addLeadingZero","ms","value"],"mappings":"+IAKA,MAAMA,EAAe,KAEfC,EAAW,SAAS,cAAc,cAAc,EAEtDA,EAAS,SAAW,GAEpB,MAAMC,EAAO,SAAS,cAAc,aAAa,EAC3CC,EAAQ,SAAS,cAAc,cAAc,EAC7CC,EAAU,SAAS,cAAc,gBAAgB,EACjDC,EAAU,SAAS,cAAc,gBAAgB,EAEjDC,EAAWC,GAAkB,CACjCC,IAEA,MAAMC,EAAeF,EAAc,GAAG,QAAO,EAG7C,GAFoB,IAAI,KAAM,EAAC,QAAO,EAEpBE,EAAc,CAC9BC,EAAS,MAAM,CACb,QAAS,qCACT,SAAU,UAChB,CAAK,EAED,MACD,CAEDT,EAAS,SAAW,GACpBU,EAAkBF,CACpB,EAEAG,EAAU,mBAAoB,CAC5B,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAAN,CACF,CAAC,EAED,IAAIK,EAAkB,EAClBE,EAAU,KAEd,MAAMC,EAAa,IAAM,CACvBD,EAAU,YAAY,IAAM,CAC1B,MAAME,EAAc,IAAI,KAAM,EAAC,QAAO,EAEhCC,EAAWL,EAAkBI,EAEnC,GAAI,EAAIC,EAAU,CAChBR,IAEA,MACD,CAED,KAAM,CACJ,KAAMS,EACN,MAAOC,EACP,QAASC,EACT,QAASC,CACf,EAAQC,EAAUL,CAAQ,EAEtBd,EAAK,YAAcoB,EAAeL,CAAS,EAC3Cd,EAAM,YAAcmB,EAAeJ,CAAU,EAC7Cd,EAAQ,YAAckB,EAAeH,CAAY,EACjDd,EAAQ,YAAciB,EAAeF,CAAY,CAClD,EAAE,GAAI,CACT,EAEMC,EAAaE,GAAO,CAMxB,MAAMrB,EAAO,KAAK,MAAMqB,EAAK,KAAG,EAC1BpB,EAAQ,KAAK,MAAOoB,EAAK,MAAO,IAAI,EACpCnB,EAAU,KAAK,MAAQmB,EAAK,MAAO,KAAQ,GAAM,EACjDlB,EAAU,KAAK,MAASkB,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAArB,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,EAEMiB,EAAkBE,GACfA,EAAM,SAAU,EAAC,SAAS,EAAG,GAAG,EAGnChB,EAAa,IAAM,CACvB,cAAcK,CAAO,EAErBZ,EAAS,SAAW,GAEpBC,EAAK,YAAcF,EACnBG,EAAM,YAAcH,EACpBI,EAAQ,YAAcJ,EACtBK,EAAQ,YAAcL,CACxB,EAEAC,EAAS,iBAAiB,QAASa,CAAU"}